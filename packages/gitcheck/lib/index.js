#! /usr/bin/env node
import o from"picocolors";import e from"path";import{glob as i}from"glob";import{simpleGit as l}from"simple-git";import n from"cac";async function t(n){n=n||process.cwd();const t=await i("**/.git/",{cwd:n,ignore:"node_modules/**"});if(0==t.length)return void console.log(o.yellow(n+"下，未发现git项目目录"));const r=t.map((async o=>{const i=e.resolve(n,o,".."),t=await async function(o){const e=l(o,{binary:"git"}),i=await e.status().then((e=>({ahead:e.ahead,gitDir:o,unsafeDir:!1,finish:0==e.files.length,notCommit:e.files.length>0}))).catch((e=>({gitDir:o,unsafeDir:e.message.includes("config --global --add safe.directory")})));return i}(i);return t}));Promise.all(r).then((e=>{const i=e.filter((o=>o.unsafeDir)).map((o=>o.gitDir)),l=e.filter((o=>o.notCommit)).map((o=>o.gitDir));if(i.length>0&&(console.log(o.bgBlue(`不安全仓库（${i.length}）: `)),i.map((e=>console.log(o.red(e))))),0==l.length){const i=e.filter((o=>o.ahead)).map((o=>o.gitDir));i.length>0?(console.log(o.bgBlue(`已提交，但未推送（${i.length}）：`)),i.map((e=>console.log(o.yellow(e))))):console.log(o.green("已全部提交且推送"))}else console.log(o.bgBlue(`未提交的项目文件夹（${l.length}）: `)),l.map((e=>console.log(o.yellow(e))))}))}const r=n();r.help(),r.version("0.0.5"),r.option("-d ,--dir <dir>","Parse folder",{default:"."}),r.command("rm <dir>","Remove a dir").option("-r, --recursive","Remove recursively").action(((o,e)=>{console.log("options: ",e),console.log("remove "+o)})),r.command("[...files]","files").action(((o,i)=>{t(e.resolve(i.dir))})),r.parse();
