#! /usr/bin/env node
import e from"picocolors";import o from"path";import{glob as t}from"glob";import{simpleGit as i}from"simple-git";import r from"ora";import n from"cac";async function a(n){n=n||process.cwd();const a=r("分析目录中").start(),s=await t("**/.git/",{cwd:n,ignore:"node_modules/**"});if(0==s.length)return void a.succeed(e.green(`分析完成! 未发现git项目(${e.italic(n)})`));const c=s.map((async e=>{const t=o.resolve(n,e,".."),r=await async function(e){const o=i(e,{binary:"git"}),t=await o.status().then((o=>({ahead:o.ahead,gitDir:e,unsafeDir:!1,staged:o.staged.length>0,not_added:o.not_added.length>0,modified:o.modified.length>0}))).catch((o=>({gitDir:e,unsafeDir:o.message.includes("config --global --add safe.directory")})));return t}(t);return r}));Promise.all(c).then((o=>{const t=o.filter((e=>e.unsafeDir)).map((e=>e.gitDir)),i=o.filter((e=>e.staged)).map((e=>e.gitDir)),r=o.filter((e=>e.modified&&!e.staged)).map((e=>e.gitDir)),s=o.filter((e=>e.not_added&&!e.staged)).map((e=>e.gitDir)),c=[...new Set([...r,...s])],g=o.filter((e=>e.ahead)).map((e=>e.gitDir));a.succeed(e.green(`${e.bold("目录分析完成")} (${e.italic(n)})`)),t.length>0&&(console.log(e.bgBlue(`🚀 insecure directory（${t.length}）: `)),t.sort().map((e=>d(e)))),c.length>0&&(l(void 0,void 0,void 0,c.length),c.sort().map((e=>d(e)))),i.length>0&&(l("add",void 0,void 0,i.length),i.sort().map((e=>d(e)))),g.length>0&&(l("add","commit",void 0,g.length),g.sort().map((e=>d(e)))),0===t.length&&0===s.length&&0===i.length&&0===g.length&&console.log(e.green("✅ 已全部提交且推送"))})).catch((o=>{a.fail(e.red("分析失败")),console.log(e.red(o))}))}function l(o,t,i,r=0){const n=e=>e?"✅":"❌";console.log(e.bgBlue(`🚀 add${n(o)} commit${n(t)} push${n(i)}（${r}）: `))}function d(o){console.log(e.italic(e.yellow(o)))}const s=n();s.help(),s.version("0.0.9-beta.4"),s.option("-d ,--dir <dir>","Parse folder",{default:"."}),s.command("rm <dir>","Remove a dir").option("-r, --recursive","Remove recursively").action(((e,o)=>{console.log("options: ",o),console.log("remove "+e)})),s.command("[...files]","files").action(((e,t)=>{a(o.resolve(t.dir))})),s.parse();
