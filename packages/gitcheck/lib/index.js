#! /usr/bin/env node
import t from"picocolors";import e from"path";import{glob as o}from"glob";import{simpleGit as i}from"simple-git";import r from"ora";import n from"cac";import{execSync as a}from"child_process";async function s(n){n=n||process.cwd();const a=r("分析目录中").start(),s=await o("**/.git/",{cwd:n,ignore:"node_modules/**"});if(0==s.length)return void a.succeed(t.green(`分析完成! 未发现git项目(${t.italic(n)})`));const c=s.map((async t=>{const o=e.resolve(n,t,".."),r=await async function(t){const e=i(t,{binary:"git"}),o=await e.status().then((e=>({ahead:e.ahead,gitDir:t,unsafeDir:!1,staged:e.staged.length>0,not_added:e.not_added.length>0,modified:e.modified.length>0}))).catch((e=>({gitDir:t,unsafeDir:e.message.includes("config --global --add safe.directory")})));return o}(o);return r}));Promise.all(c).then((e=>{const o=e.filter((t=>t.unsafeDir)).map((t=>t.gitDir)),i=e.filter((t=>t.staged)).map((t=>t.gitDir)),r=e.filter((t=>t.modified&&!t.staged)).map((t=>t.gitDir)),s=e.filter((t=>t.not_added&&!t.staged)).map((t=>t.gitDir)),c=[...new Set([...r,...s])],g=e.filter((t=>t.ahead)).map((t=>t.gitDir));a.succeed(t.green(`${t.bold("目录分析完成")} (${t.italic(n)})`)),o.length>0&&(console.log(t.bgBlue(`🚀 insecure directory（${o.length}）: `)),o.sort().map((t=>l(t)))),c.length>0&&(d(void 0,void 0,void 0,c.length),c.sort().map((t=>l(t)))),i.length>0&&(d("add",void 0,void 0,i.length),i.sort().map((t=>l(t)))),g.length>0&&(d("add","commit",void 0,g.length),g.sort().map((t=>l(t)))),0===o.length&&0===s.length&&0===i.length&&0===g.length&&console.log(t.green("✅ 已全部提交且推送"))})).catch((e=>{a.fail(t.red("分析失败")),console.log(t.red(e))}))}function d(e,o,i,r=0){const n=t=>t?"✅":"❌";console.log(t.bgBlue(`🚀 add${n(e)} commit${n(o)} push${n(i)}（${r}）: `))}function l(e){console.log(t.italic(t.yellow(e)))}const c=n();c.help(),c.version("0.0.9-beta.5"),c.option("-d ,--dir <dir>","Parse folder",{default:"."}),c.command("gp <dir>","Remove a dir").option("-gp, --gitpush <dir>","Execute git push with retry",{default:"."}).option("-r, --retry <number>","Retry attempts count",{default:3}).action(((t,o)=>{!function(t=process.cwd(),e=3){let o=!1;for(;e>0&&!o;)try{console.log(`执行git push (剩余重试次数: ${e})`),a("git push",{cwd:t,stdio:"inherit"}),o=!0,console.log("[32m%s[0m","推送成功")}catch(t){if(e--,console.log("[31m%s[0m",`推送失败，${e}次重试机会`),0===e)throw new Error("git push重试次数用尽")}}(e.resolve(t),o.retry)})),c.command("[...files]","files").action(((t,o)=>{s(e.resolve(o.dir))})),c.parse();
